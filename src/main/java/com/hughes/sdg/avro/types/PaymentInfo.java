/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hughes.sdg.avro.types;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PaymentInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2843514889092031271L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentInfo\",\"namespace\":\"com.hughes.sdg.avro.types\",\"fields\":[{\"name\":\"BillingMethod\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CreditCardInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CreditCardInfo\",\"fields\":[{\"name\":\"Type\",\"type\":\"string\"},{\"name\":\"Number\",\"type\":\"string\"},{\"name\":\"ExpirationMonth\",\"type\":\"string\"},{\"name\":\"ExpirationYear\",\"type\":\"string\"},{\"name\":\"CVV\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"BankAccountInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BankAccountInfo\",\"fields\":[{\"name\":\"AccountNumber\",\"type\":\"string\"},{\"name\":\"RoutingNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"AgencyNumber\",\"type\":\"string\"},{\"name\":\"BankCode\",\"type\":\"string\"}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentInfo> ENCODER =
      new BinaryMessageEncoder<PaymentInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentInfo> DECODER =
      new BinaryMessageDecoder<PaymentInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PaymentInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PaymentInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PaymentInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PaymentInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PaymentInfo from a ByteBuffer. */
  public static PaymentInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence BillingMethod;
  @Deprecated public com.hughes.sdg.avro.types.CreditCardInfo CreditCardInfo;
  @Deprecated public com.hughes.sdg.avro.types.BankAccountInfo BankAccountInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentInfo() {}

  /**
   * All-args constructor.
   * @param BillingMethod The new value for BillingMethod
   * @param CreditCardInfo The new value for CreditCardInfo
   * @param BankAccountInfo The new value for BankAccountInfo
   */
  public PaymentInfo(java.lang.CharSequence BillingMethod, com.hughes.sdg.avro.types.CreditCardInfo CreditCardInfo, com.hughes.sdg.avro.types.BankAccountInfo BankAccountInfo) {
    this.BillingMethod = BillingMethod;
    this.CreditCardInfo = CreditCardInfo;
    this.BankAccountInfo = BankAccountInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return BillingMethod;
    case 1: return CreditCardInfo;
    case 2: return BankAccountInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: BillingMethod = (java.lang.CharSequence)value$; break;
    case 1: CreditCardInfo = (com.hughes.sdg.avro.types.CreditCardInfo)value$; break;
    case 2: BankAccountInfo = (com.hughes.sdg.avro.types.BankAccountInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'BillingMethod' field.
   * @return The value of the 'BillingMethod' field.
   */
  public java.lang.CharSequence getBillingMethod() {
    return BillingMethod;
  }

  /**
   * Sets the value of the 'BillingMethod' field.
   * @param value the value to set.
   */
  public void setBillingMethod(java.lang.CharSequence value) {
    this.BillingMethod = value;
  }

  /**
   * Gets the value of the 'CreditCardInfo' field.
   * @return The value of the 'CreditCardInfo' field.
   */
  public com.hughes.sdg.avro.types.CreditCardInfo getCreditCardInfo() {
    return CreditCardInfo;
  }

  /**
   * Sets the value of the 'CreditCardInfo' field.
   * @param value the value to set.
   */
  public void setCreditCardInfo(com.hughes.sdg.avro.types.CreditCardInfo value) {
    this.CreditCardInfo = value;
  }

  /**
   * Gets the value of the 'BankAccountInfo' field.
   * @return The value of the 'BankAccountInfo' field.
   */
  public com.hughes.sdg.avro.types.BankAccountInfo getBankAccountInfo() {
    return BankAccountInfo;
  }

  /**
   * Sets the value of the 'BankAccountInfo' field.
   * @param value the value to set.
   */
  public void setBankAccountInfo(com.hughes.sdg.avro.types.BankAccountInfo value) {
    this.BankAccountInfo = value;
  }

  /**
   * Creates a new PaymentInfo RecordBuilder.
   * @return A new PaymentInfo RecordBuilder
   */
  public static com.hughes.sdg.avro.types.PaymentInfo.Builder newBuilder() {
    return new com.hughes.sdg.avro.types.PaymentInfo.Builder();
  }

  /**
   * Creates a new PaymentInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentInfo RecordBuilder
   */
  public static com.hughes.sdg.avro.types.PaymentInfo.Builder newBuilder(com.hughes.sdg.avro.types.PaymentInfo.Builder other) {
    return new com.hughes.sdg.avro.types.PaymentInfo.Builder(other);
  }

  /**
   * Creates a new PaymentInfo RecordBuilder by copying an existing PaymentInfo instance.
   * @param other The existing instance to copy.
   * @return A new PaymentInfo RecordBuilder
   */
  public static com.hughes.sdg.avro.types.PaymentInfo.Builder newBuilder(com.hughes.sdg.avro.types.PaymentInfo other) {
    return new com.hughes.sdg.avro.types.PaymentInfo.Builder(other);
  }

  /**
   * RecordBuilder for PaymentInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentInfo>
    implements org.apache.avro.data.RecordBuilder<PaymentInfo> {

    private java.lang.CharSequence BillingMethod;
    private com.hughes.sdg.avro.types.CreditCardInfo CreditCardInfo;
    private com.hughes.sdg.avro.types.CreditCardInfo.Builder CreditCardInfoBuilder;
    private com.hughes.sdg.avro.types.BankAccountInfo BankAccountInfo;
    private com.hughes.sdg.avro.types.BankAccountInfo.Builder BankAccountInfoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hughes.sdg.avro.types.PaymentInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.BillingMethod)) {
        this.BillingMethod = data().deepCopy(fields()[0].schema(), other.BillingMethod);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CreditCardInfo)) {
        this.CreditCardInfo = data().deepCopy(fields()[1].schema(), other.CreditCardInfo);
        fieldSetFlags()[1] = true;
      }
      if (other.hasCreditCardInfoBuilder()) {
        this.CreditCardInfoBuilder = com.hughes.sdg.avro.types.CreditCardInfo.newBuilder(other.getCreditCardInfoBuilder());
      }
      if (isValidValue(fields()[2], other.BankAccountInfo)) {
        this.BankAccountInfo = data().deepCopy(fields()[2].schema(), other.BankAccountInfo);
        fieldSetFlags()[2] = true;
      }
      if (other.hasBankAccountInfoBuilder()) {
        this.BankAccountInfoBuilder = com.hughes.sdg.avro.types.BankAccountInfo.newBuilder(other.getBankAccountInfoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hughes.sdg.avro.types.PaymentInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.BillingMethod)) {
        this.BillingMethod = data().deepCopy(fields()[0].schema(), other.BillingMethod);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CreditCardInfo)) {
        this.CreditCardInfo = data().deepCopy(fields()[1].schema(), other.CreditCardInfo);
        fieldSetFlags()[1] = true;
      }
      this.CreditCardInfoBuilder = null;
      if (isValidValue(fields()[2], other.BankAccountInfo)) {
        this.BankAccountInfo = data().deepCopy(fields()[2].schema(), other.BankAccountInfo);
        fieldSetFlags()[2] = true;
      }
      this.BankAccountInfoBuilder = null;
    }

    /**
      * Gets the value of the 'BillingMethod' field.
      * @return The value.
      */
    public java.lang.CharSequence getBillingMethod() {
      return BillingMethod;
    }

    /**
      * Sets the value of the 'BillingMethod' field.
      * @param value The value of 'BillingMethod'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder setBillingMethod(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.BillingMethod = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'BillingMethod' field has been set.
      * @return True if the 'BillingMethod' field has been set, false otherwise.
      */
    public boolean hasBillingMethod() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'BillingMethod' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder clearBillingMethod() {
      BillingMethod = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CreditCardInfo' field.
      * @return The value.
      */
    public com.hughes.sdg.avro.types.CreditCardInfo getCreditCardInfo() {
      return CreditCardInfo;
    }

    /**
      * Sets the value of the 'CreditCardInfo' field.
      * @param value The value of 'CreditCardInfo'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder setCreditCardInfo(com.hughes.sdg.avro.types.CreditCardInfo value) {
      validate(fields()[1], value);
      this.CreditCardInfoBuilder = null;
      this.CreditCardInfo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CreditCardInfo' field has been set.
      * @return True if the 'CreditCardInfo' field has been set, false otherwise.
      */
    public boolean hasCreditCardInfo() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'CreditCardInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hughes.sdg.avro.types.CreditCardInfo.Builder getCreditCardInfoBuilder() {
      if (CreditCardInfoBuilder == null) {
        if (hasCreditCardInfo()) {
          setCreditCardInfoBuilder(com.hughes.sdg.avro.types.CreditCardInfo.newBuilder(CreditCardInfo));
        } else {
          setCreditCardInfoBuilder(com.hughes.sdg.avro.types.CreditCardInfo.newBuilder());
        }
      }
      return CreditCardInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'CreditCardInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder setCreditCardInfoBuilder(com.hughes.sdg.avro.types.CreditCardInfo.Builder value) {
      clearCreditCardInfo();
      CreditCardInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'CreditCardInfo' field has an active Builder instance
     * @return True if the 'CreditCardInfo' field has an active Builder instance
     */
    public boolean hasCreditCardInfoBuilder() {
      return CreditCardInfoBuilder != null;
    }

    /**
      * Clears the value of the 'CreditCardInfo' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder clearCreditCardInfo() {
      CreditCardInfo = null;
      CreditCardInfoBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'BankAccountInfo' field.
      * @return The value.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo getBankAccountInfo() {
      return BankAccountInfo;
    }

    /**
      * Sets the value of the 'BankAccountInfo' field.
      * @param value The value of 'BankAccountInfo'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder setBankAccountInfo(com.hughes.sdg.avro.types.BankAccountInfo value) {
      validate(fields()[2], value);
      this.BankAccountInfoBuilder = null;
      this.BankAccountInfo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'BankAccountInfo' field has been set.
      * @return True if the 'BankAccountInfo' field has been set, false otherwise.
      */
    public boolean hasBankAccountInfo() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'BankAccountInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder getBankAccountInfoBuilder() {
      if (BankAccountInfoBuilder == null) {
        if (hasBankAccountInfo()) {
          setBankAccountInfoBuilder(com.hughes.sdg.avro.types.BankAccountInfo.newBuilder(BankAccountInfo));
        } else {
          setBankAccountInfoBuilder(com.hughes.sdg.avro.types.BankAccountInfo.newBuilder());
        }
      }
      return BankAccountInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'BankAccountInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder setBankAccountInfoBuilder(com.hughes.sdg.avro.types.BankAccountInfo.Builder value) {
      clearBankAccountInfo();
      BankAccountInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'BankAccountInfo' field has an active Builder instance
     * @return True if the 'BankAccountInfo' field has an active Builder instance
     */
    public boolean hasBankAccountInfoBuilder() {
      return BankAccountInfoBuilder != null;
    }

    /**
      * Clears the value of the 'BankAccountInfo' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.PaymentInfo.Builder clearBankAccountInfo() {
      BankAccountInfo = null;
      BankAccountInfoBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentInfo build() {
      try {
        PaymentInfo record = new PaymentInfo();
        record.BillingMethod = fieldSetFlags()[0] ? this.BillingMethod : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (CreditCardInfoBuilder != null) {
          record.CreditCardInfo = this.CreditCardInfoBuilder.build();
        } else {
          record.CreditCardInfo = fieldSetFlags()[1] ? this.CreditCardInfo : (com.hughes.sdg.avro.types.CreditCardInfo) defaultValue(fields()[1]);
        }
        if (BankAccountInfoBuilder != null) {
          record.BankAccountInfo = this.BankAccountInfoBuilder.build();
        } else {
          record.BankAccountInfo = fieldSetFlags()[2] ? this.BankAccountInfo : (com.hughes.sdg.avro.types.BankAccountInfo) defaultValue(fields()[2]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentInfo>
    READER$ = (org.apache.avro.io.DatumReader<PaymentInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

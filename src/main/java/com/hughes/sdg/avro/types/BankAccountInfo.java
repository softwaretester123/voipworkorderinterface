/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hughes.sdg.avro.types;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BankAccountInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4193288028876523452L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BankAccountInfo\",\"namespace\":\"com.hughes.sdg.avro.types\",\"fields\":[{\"name\":\"AccountNumber\",\"type\":\"string\"},{\"name\":\"RoutingNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"AgencyNumber\",\"type\":\"string\"},{\"name\":\"BankCode\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BankAccountInfo> ENCODER =
      new BinaryMessageEncoder<BankAccountInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BankAccountInfo> DECODER =
      new BinaryMessageDecoder<BankAccountInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BankAccountInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BankAccountInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BankAccountInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BankAccountInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BankAccountInfo from a ByteBuffer. */
  public static BankAccountInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence AccountNumber;
  @Deprecated public java.lang.CharSequence RoutingNumber;
  @Deprecated public java.lang.CharSequence AgencyNumber;
  @Deprecated public java.lang.CharSequence BankCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BankAccountInfo() {}

  /**
   * All-args constructor.
   * @param AccountNumber The new value for AccountNumber
   * @param RoutingNumber The new value for RoutingNumber
   * @param AgencyNumber The new value for AgencyNumber
   * @param BankCode The new value for BankCode
   */
  public BankAccountInfo(java.lang.CharSequence AccountNumber, java.lang.CharSequence RoutingNumber, java.lang.CharSequence AgencyNumber, java.lang.CharSequence BankCode) {
    this.AccountNumber = AccountNumber;
    this.RoutingNumber = RoutingNumber;
    this.AgencyNumber = AgencyNumber;
    this.BankCode = BankCode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return AccountNumber;
    case 1: return RoutingNumber;
    case 2: return AgencyNumber;
    case 3: return BankCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: AccountNumber = (java.lang.CharSequence)value$; break;
    case 1: RoutingNumber = (java.lang.CharSequence)value$; break;
    case 2: AgencyNumber = (java.lang.CharSequence)value$; break;
    case 3: BankCode = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'AccountNumber' field.
   * @return The value of the 'AccountNumber' field.
   */
  public java.lang.CharSequence getAccountNumber() {
    return AccountNumber;
  }

  /**
   * Sets the value of the 'AccountNumber' field.
   * @param value the value to set.
   */
  public void setAccountNumber(java.lang.CharSequence value) {
    this.AccountNumber = value;
  }

  /**
   * Gets the value of the 'RoutingNumber' field.
   * @return The value of the 'RoutingNumber' field.
   */
  public java.lang.CharSequence getRoutingNumber() {
    return RoutingNumber;
  }

  /**
   * Sets the value of the 'RoutingNumber' field.
   * @param value the value to set.
   */
  public void setRoutingNumber(java.lang.CharSequence value) {
    this.RoutingNumber = value;
  }

  /**
   * Gets the value of the 'AgencyNumber' field.
   * @return The value of the 'AgencyNumber' field.
   */
  public java.lang.CharSequence getAgencyNumber() {
    return AgencyNumber;
  }

  /**
   * Sets the value of the 'AgencyNumber' field.
   * @param value the value to set.
   */
  public void setAgencyNumber(java.lang.CharSequence value) {
    this.AgencyNumber = value;
  }

  /**
   * Gets the value of the 'BankCode' field.
   * @return The value of the 'BankCode' field.
   */
  public java.lang.CharSequence getBankCode() {
    return BankCode;
  }

  /**
   * Sets the value of the 'BankCode' field.
   * @param value the value to set.
   */
  public void setBankCode(java.lang.CharSequence value) {
    this.BankCode = value;
  }

  /**
   * Creates a new BankAccountInfo RecordBuilder.
   * @return A new BankAccountInfo RecordBuilder
   */
  public static com.hughes.sdg.avro.types.BankAccountInfo.Builder newBuilder() {
    return new com.hughes.sdg.avro.types.BankAccountInfo.Builder();
  }

  /**
   * Creates a new BankAccountInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BankAccountInfo RecordBuilder
   */
  public static com.hughes.sdg.avro.types.BankAccountInfo.Builder newBuilder(com.hughes.sdg.avro.types.BankAccountInfo.Builder other) {
    return new com.hughes.sdg.avro.types.BankAccountInfo.Builder(other);
  }

  /**
   * Creates a new BankAccountInfo RecordBuilder by copying an existing BankAccountInfo instance.
   * @param other The existing instance to copy.
   * @return A new BankAccountInfo RecordBuilder
   */
  public static com.hughes.sdg.avro.types.BankAccountInfo.Builder newBuilder(com.hughes.sdg.avro.types.BankAccountInfo other) {
    return new com.hughes.sdg.avro.types.BankAccountInfo.Builder(other);
  }

  /**
   * RecordBuilder for BankAccountInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BankAccountInfo>
    implements org.apache.avro.data.RecordBuilder<BankAccountInfo> {

    private java.lang.CharSequence AccountNumber;
    private java.lang.CharSequence RoutingNumber;
    private java.lang.CharSequence AgencyNumber;
    private java.lang.CharSequence BankCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hughes.sdg.avro.types.BankAccountInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.AccountNumber)) {
        this.AccountNumber = data().deepCopy(fields()[0].schema(), other.AccountNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.RoutingNumber)) {
        this.RoutingNumber = data().deepCopy(fields()[1].schema(), other.RoutingNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.AgencyNumber)) {
        this.AgencyNumber = data().deepCopy(fields()[2].schema(), other.AgencyNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.BankCode)) {
        this.BankCode = data().deepCopy(fields()[3].schema(), other.BankCode);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BankAccountInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hughes.sdg.avro.types.BankAccountInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.AccountNumber)) {
        this.AccountNumber = data().deepCopy(fields()[0].schema(), other.AccountNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.RoutingNumber)) {
        this.RoutingNumber = data().deepCopy(fields()[1].schema(), other.RoutingNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.AgencyNumber)) {
        this.AgencyNumber = data().deepCopy(fields()[2].schema(), other.AgencyNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.BankCode)) {
        this.BankCode = data().deepCopy(fields()[3].schema(), other.BankCode);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'AccountNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountNumber() {
      return AccountNumber;
    }

    /**
      * Sets the value of the 'AccountNumber' field.
      * @param value The value of 'AccountNumber'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder setAccountNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.AccountNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'AccountNumber' field has been set.
      * @return True if the 'AccountNumber' field has been set, false otherwise.
      */
    public boolean hasAccountNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'AccountNumber' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder clearAccountNumber() {
      AccountNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'RoutingNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getRoutingNumber() {
      return RoutingNumber;
    }

    /**
      * Sets the value of the 'RoutingNumber' field.
      * @param value The value of 'RoutingNumber'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder setRoutingNumber(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.RoutingNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'RoutingNumber' field has been set.
      * @return True if the 'RoutingNumber' field has been set, false otherwise.
      */
    public boolean hasRoutingNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'RoutingNumber' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder clearRoutingNumber() {
      RoutingNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'AgencyNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getAgencyNumber() {
      return AgencyNumber;
    }

    /**
      * Sets the value of the 'AgencyNumber' field.
      * @param value The value of 'AgencyNumber'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder setAgencyNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.AgencyNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'AgencyNumber' field has been set.
      * @return True if the 'AgencyNumber' field has been set, false otherwise.
      */
    public boolean hasAgencyNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'AgencyNumber' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder clearAgencyNumber() {
      AgencyNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'BankCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getBankCode() {
      return BankCode;
    }

    /**
      * Sets the value of the 'BankCode' field.
      * @param value The value of 'BankCode'.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder setBankCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.BankCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'BankCode' field has been set.
      * @return True if the 'BankCode' field has been set, false otherwise.
      */
    public boolean hasBankCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'BankCode' field.
      * @return This builder.
      */
    public com.hughes.sdg.avro.types.BankAccountInfo.Builder clearBankCode() {
      BankCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BankAccountInfo build() {
      try {
        BankAccountInfo record = new BankAccountInfo();
        record.AccountNumber = fieldSetFlags()[0] ? this.AccountNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.RoutingNumber = fieldSetFlags()[1] ? this.RoutingNumber : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.AgencyNumber = fieldSetFlags()[2] ? this.AgencyNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.BankCode = fieldSetFlags()[3] ? this.BankCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BankAccountInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<BankAccountInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BankAccountInfo>
    READER$ = (org.apache.avro.io.DatumReader<BankAccountInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hughes.billing.voipworkorder.dto.avro.req;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class InstallName extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1915299637269645093L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InstallName\",\"namespace\":\"com.hughes.billing.voipworkorder.dto.avro.req\",\"fields\":[{\"name\":\"FirstName\",\"type\":[\"null\",\"string\"]},{\"name\":\"LastName\",\"type\":[\"null\",\"string\"]},{\"name\":\"MiddleName\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<InstallName> ENCODER =
      new BinaryMessageEncoder<InstallName>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<InstallName> DECODER =
      new BinaryMessageDecoder<InstallName>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<InstallName> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<InstallName> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<InstallName> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<InstallName>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this InstallName to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a InstallName from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a InstallName instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static InstallName fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence FirstName;
  @Deprecated public java.lang.CharSequence LastName;
  @Deprecated public java.lang.CharSequence MiddleName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public InstallName() {}

  /**
   * All-args constructor.
   * @param FirstName The new value for FirstName
   * @param LastName The new value for LastName
   * @param MiddleName The new value for MiddleName
   */
  public InstallName(java.lang.CharSequence FirstName, java.lang.CharSequence LastName, java.lang.CharSequence MiddleName) {
    this.FirstName = FirstName;
    this.LastName = LastName;
    this.MiddleName = MiddleName;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return FirstName;
    case 1: return LastName;
    case 2: return MiddleName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: FirstName = (java.lang.CharSequence)value$; break;
    case 1: LastName = (java.lang.CharSequence)value$; break;
    case 2: MiddleName = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'FirstName' field.
   * @return The value of the 'FirstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return FirstName;
  }


  /**
   * Sets the value of the 'FirstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.FirstName = value;
  }

  /**
   * Gets the value of the 'LastName' field.
   * @return The value of the 'LastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return LastName;
  }


  /**
   * Sets the value of the 'LastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.LastName = value;
  }

  /**
   * Gets the value of the 'MiddleName' field.
   * @return The value of the 'MiddleName' field.
   */
  public java.lang.CharSequence getMiddleName() {
    return MiddleName;
  }


  /**
   * Sets the value of the 'MiddleName' field.
   * @param value the value to set.
   */
  public void setMiddleName(java.lang.CharSequence value) {
    this.MiddleName = value;
  }

  /**
   * Creates a new InstallName RecordBuilder.
   * @return A new InstallName RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder newBuilder() {
    return new com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder();
  }

  /**
   * Creates a new InstallName RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new InstallName RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder other) {
    if (other == null) {
      return new com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder();
    } else {
      return new com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder(other);
    }
  }

  /**
   * Creates a new InstallName RecordBuilder by copying an existing InstallName instance.
   * @param other The existing instance to copy.
   * @return A new InstallName RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.req.InstallName other) {
    if (other == null) {
      return new com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder();
    } else {
      return new com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder(other);
    }
  }

  /**
   * RecordBuilder for InstallName instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InstallName>
    implements org.apache.avro.data.RecordBuilder<InstallName> {

    private java.lang.CharSequence FirstName;
    private java.lang.CharSequence LastName;
    private java.lang.CharSequence MiddleName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.FirstName)) {
        this.FirstName = data().deepCopy(fields()[0].schema(), other.FirstName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.LastName)) {
        this.LastName = data().deepCopy(fields()[1].schema(), other.LastName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.MiddleName)) {
        this.MiddleName = data().deepCopy(fields()[2].schema(), other.MiddleName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing InstallName instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.req.InstallName other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.FirstName)) {
        this.FirstName = data().deepCopy(fields()[0].schema(), other.FirstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.LastName)) {
        this.LastName = data().deepCopy(fields()[1].schema(), other.LastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.MiddleName)) {
        this.MiddleName = data().deepCopy(fields()[2].schema(), other.MiddleName);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'FirstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return FirstName;
    }


    /**
      * Sets the value of the 'FirstName' field.
      * @param value The value of 'FirstName'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.FirstName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'FirstName' field has been set.
      * @return True if the 'FirstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'FirstName' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder clearFirstName() {
      FirstName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'LastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return LastName;
    }


    /**
      * Sets the value of the 'LastName' field.
      * @param value The value of 'LastName'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.LastName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'LastName' field has been set.
      * @return True if the 'LastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'LastName' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder clearLastName() {
      LastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'MiddleName' field.
      * @return The value.
      */
    public java.lang.CharSequence getMiddleName() {
      return MiddleName;
    }


    /**
      * Sets the value of the 'MiddleName' field.
      * @param value The value of 'MiddleName'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder setMiddleName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.MiddleName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'MiddleName' field has been set.
      * @return True if the 'MiddleName' field has been set, false otherwise.
      */
    public boolean hasMiddleName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'MiddleName' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallName.Builder clearMiddleName() {
      MiddleName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public InstallName build() {
      try {
        InstallName record = new InstallName();
        record.FirstName = fieldSetFlags()[0] ? this.FirstName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.LastName = fieldSetFlags()[1] ? this.LastName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.MiddleName = fieldSetFlags()[2] ? this.MiddleName : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<InstallName>
    WRITER$ = (org.apache.avro.io.DatumWriter<InstallName>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<InstallName>
    READER$ = (org.apache.avro.io.DatumReader<InstallName>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.FirstName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.FirstName);
    }

    if (this.LastName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LastName);
    }

    if (this.MiddleName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.MiddleName);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.FirstName = null;
      } else {
        this.FirstName = in.readString(this.FirstName instanceof Utf8 ? (Utf8)this.FirstName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LastName = null;
      } else {
        this.LastName = in.readString(this.LastName instanceof Utf8 ? (Utf8)this.LastName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.MiddleName = null;
      } else {
        this.MiddleName = in.readString(this.MiddleName instanceof Utf8 ? (Utf8)this.MiddleName : null);
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.FirstName = null;
          } else {
            this.FirstName = in.readString(this.FirstName instanceof Utf8 ? (Utf8)this.FirstName : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LastName = null;
          } else {
            this.LastName = in.readString(this.LastName instanceof Utf8 ? (Utf8)this.LastName : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.MiddleName = null;
          } else {
            this.MiddleName = in.readString(this.MiddleName instanceof Utf8 ? (Utf8)this.MiddleName : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}











/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hughes.billing.voipworkorder.dto.avro.ack;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Orders extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8426849987432249074L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Orders\",\"namespace\":\"com.hughes.billing.voipworkorder.dto.avro.ack\",\"fields\":[{\"name\":\"OrderInformation\",\"type\":{\"type\":\"record\",\"name\":\"OrderInformation\",\"fields\":[{\"name\":\"SAN\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Orders> ENCODER =
      new BinaryMessageEncoder<Orders>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Orders> DECODER =
      new BinaryMessageDecoder<Orders>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Orders> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Orders> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Orders>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Orders to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Orders from a ByteBuffer. */
  public static Orders fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation OrderInformation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Orders() {}

  /**
   * All-args constructor.
   * @param OrderInformation The new value for OrderInformation
   */
  public Orders(com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation OrderInformation) {
    this.OrderInformation = OrderInformation;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return OrderInformation;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: OrderInformation = (com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'OrderInformation' field.
   * @return The value of the 'OrderInformation' field.
   */
  public com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation getOrderInformation() {
    return OrderInformation;
  }

  /**
   * Sets the value of the 'OrderInformation' field.
   * @param value the value to set.
   */
  public void setOrderInformation(com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation value) {
    this.OrderInformation = value;
  }

  /**
   * Creates a new Orders RecordBuilder.
   * @return A new Orders RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder newBuilder() {
    return new com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder();
  }

  /**
   * Creates a new Orders RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Orders RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder other) {
    return new com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder(other);
  }

  /**
   * Creates a new Orders RecordBuilder by copying an existing Orders instance.
   * @param other The existing instance to copy.
   * @return A new Orders RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.ack.Orders other) {
    return new com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder(other);
  }

  /**
   * RecordBuilder for Orders instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Orders>
    implements org.apache.avro.data.RecordBuilder<Orders> {

    private com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation OrderInformation;
    private com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation.Builder OrderInformationBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.OrderInformation)) {
        this.OrderInformation = data().deepCopy(fields()[0].schema(), other.OrderInformation);
        fieldSetFlags()[0] = true;
      }
      if (other.hasOrderInformationBuilder()) {
        this.OrderInformationBuilder = com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation.newBuilder(other.getOrderInformationBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Orders instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.ack.Orders other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.OrderInformation)) {
        this.OrderInformation = data().deepCopy(fields()[0].schema(), other.OrderInformation);
        fieldSetFlags()[0] = true;
      }
      this.OrderInformationBuilder = null;
    }

    /**
      * Gets the value of the 'OrderInformation' field.
      * @return The value.
      */
    public com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation getOrderInformation() {
      return OrderInformation;
    }

    /**
      * Sets the value of the 'OrderInformation' field.
      * @param value The value of 'OrderInformation'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder setOrderInformation(com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation value) {
      validate(fields()[0], value);
      this.OrderInformationBuilder = null;
      this.OrderInformation = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderInformation' field has been set.
      * @return True if the 'OrderInformation' field has been set, false otherwise.
      */
    public boolean hasOrderInformation() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'OrderInformation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation.Builder getOrderInformationBuilder() {
      if (OrderInformationBuilder == null) {
        if (hasOrderInformation()) {
          setOrderInformationBuilder(com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation.newBuilder(OrderInformation));
        } else {
          setOrderInformationBuilder(com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation.newBuilder());
        }
      }
      return OrderInformationBuilder;
    }

    /**
     * Sets the Builder instance for the 'OrderInformation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder setOrderInformationBuilder(com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation.Builder value) {
      clearOrderInformation();
      OrderInformationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'OrderInformation' field has an active Builder instance
     * @return True if the 'OrderInformation' field has an active Builder instance
     */
    public boolean hasOrderInformationBuilder() {
      return OrderInformationBuilder != null;
    }

    /**
      * Clears the value of the 'OrderInformation' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.ack.Orders.Builder clearOrderInformation() {
      OrderInformation = null;
      OrderInformationBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Orders build() {
      try {
        Orders record = new Orders();
        if (OrderInformationBuilder != null) {
          record.OrderInformation = this.OrderInformationBuilder.build();
        } else {
          record.OrderInformation = fieldSetFlags()[0] ? this.OrderInformation : (com.hughes.billing.voipworkorder.dto.avro.ack.OrderInformation) defaultValue(fields()[0]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Orders>
    WRITER$ = (org.apache.avro.io.DatumWriter<Orders>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Orders>
    READER$ = (org.apache.avro.io.DatumReader<Orders>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}

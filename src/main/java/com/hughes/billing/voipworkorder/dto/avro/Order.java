/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hughes.billing.voipworkorder.dto.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated

public class Order extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5891053507918755519L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Order\",\"namespace\":\"com.hughes.billing.voipworkorder.dto.avro\",\"fields\":[{\"name\":\"InstallAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"InstallAddress\",\"fields\":[{\"name\":\"Address1\",\"type\":[\"null\",\"string\"]},{\"name\":\"Address2\",\"type\":\"null\"},{\"name\":\"City\",\"type\":[\"null\",\"string\"]},{\"name\":\"Country\",\"type\":[\"null\",\"string\"]},{\"name\":\"State\",\"type\":[\"null\",\"string\"]},{\"name\":\"Zip\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"InstallPhone\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",{\"type\":\"record\",\"name\":\"InstallPhone\",\"fields\":[{\"name\":\"Number\",\"type\":[\"null\",\"string\"]},{\"name\":\"Type\",\"type\":[\"null\",\"string\"]}]}]}]},{\"name\":\"OrderInformation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrderInformation\",\"fields\":[{\"name\":\"SAN\",\"type\":[\"null\",\"string\"]}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Order> ENCODER =
      new BinaryMessageEncoder<Order>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Order> DECODER =
      new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Order> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Order> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Order> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Order to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Order from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Order instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Order fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private com.hughes.billing.voipworkorder.dto.avro.InstallAddress InstallAddress;
   private java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> InstallPhone;
   private com.hughes.billing.voipworkorder.dto.avro.OrderInformation OrderInformation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Order() {}

  /**
   * All-args constructor.
   * @param InstallAddress The new value for InstallAddress
   * @param InstallPhone The new value for InstallPhone
   * @param OrderInformation The new value for OrderInformation
   */
  public Order(com.hughes.billing.voipworkorder.dto.avro.InstallAddress InstallAddress, java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> InstallPhone, com.hughes.billing.voipworkorder.dto.avro.OrderInformation OrderInformation) {
    this.InstallAddress = InstallAddress;
    this.InstallPhone = InstallPhone;
    this.OrderInformation = OrderInformation;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return InstallAddress;
    case 1: return InstallPhone;
    case 2: return OrderInformation;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: InstallAddress = (com.hughes.billing.voipworkorder.dto.avro.InstallAddress)value$; break;
    case 1: InstallPhone = (java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone>)value$; break;
    case 2: OrderInformation = (com.hughes.billing.voipworkorder.dto.avro.OrderInformation)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'InstallAddress' field.
   * @return The value of the 'InstallAddress' field.
   */
  public com.hughes.billing.voipworkorder.dto.avro.InstallAddress getInstallAddress() {
    return InstallAddress;
  }


  /**
   * Sets the value of the 'InstallAddress' field.
   * @param value the value to set.
   */
  public void setInstallAddress(com.hughes.billing.voipworkorder.dto.avro.InstallAddress value) {
    this.InstallAddress = value;
  }

  /**
   * Gets the value of the 'InstallPhone' field.
   * @return The value of the 'InstallPhone' field.
   */
  public java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> getInstallPhone() {
    return InstallPhone;
  }


  /**
   * Sets the value of the 'InstallPhone' field.
   * @param value the value to set.
   */
  public void setInstallPhone(java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> value) {
    this.InstallPhone = value;
  }

  /**
   * Gets the value of the 'OrderInformation' field.
   * @return The value of the 'OrderInformation' field.
   */
  public com.hughes.billing.voipworkorder.dto.avro.OrderInformation getOrderInformation() {
    return OrderInformation;
  }


  /**
   * Sets the value of the 'OrderInformation' field.
   * @param value the value to set.
   */
  public void setOrderInformation(com.hughes.billing.voipworkorder.dto.avro.OrderInformation value) {
    this.OrderInformation = value;
  }

  /**
   * Creates a new Order RecordBuilder.
   * @return A new Order RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.Order.Builder newBuilder() {
    return new com.hughes.billing.voipworkorder.dto.avro.Order.Builder();
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Order RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.Order.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.Order.Builder other) {
    if (other == null) {
      return new com.hughes.billing.voipworkorder.dto.avro.Order.Builder();
    } else {
      return new com.hughes.billing.voipworkorder.dto.avro.Order.Builder(other);
    }
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Order instance.
   * @param other The existing instance to copy.
   * @return A new Order RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.Order.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.Order other) {
    if (other == null) {
      return new com.hughes.billing.voipworkorder.dto.avro.Order.Builder();
    } else {
      return new com.hughes.billing.voipworkorder.dto.avro.Order.Builder(other);
    }
  }

  /**
   * RecordBuilder for Order instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Order>
    implements org.apache.avro.data.RecordBuilder<Order> {

    private com.hughes.billing.voipworkorder.dto.avro.InstallAddress InstallAddress;
    private com.hughes.billing.voipworkorder.dto.avro.InstallAddress.Builder InstallAddressBuilder;
    private java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> InstallPhone;
    private com.hughes.billing.voipworkorder.dto.avro.OrderInformation OrderInformation;
    private com.hughes.billing.voipworkorder.dto.avro.OrderInformation.Builder OrderInformationBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.Order.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.InstallAddress)) {
        this.InstallAddress = data().deepCopy(fields()[0].schema(), other.InstallAddress);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasInstallAddressBuilder()) {
        this.InstallAddressBuilder = com.hughes.billing.voipworkorder.dto.avro.InstallAddress.newBuilder(other.getInstallAddressBuilder());
      }
      if (isValidValue(fields()[1], other.InstallPhone)) {
        this.InstallPhone = data().deepCopy(fields()[1].schema(), other.InstallPhone);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.OrderInformation)) {
        this.OrderInformation = data().deepCopy(fields()[2].schema(), other.OrderInformation);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasOrderInformationBuilder()) {
        this.OrderInformationBuilder = com.hughes.billing.voipworkorder.dto.avro.OrderInformation.newBuilder(other.getOrderInformationBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Order instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.Order other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.InstallAddress)) {
        this.InstallAddress = data().deepCopy(fields()[0].schema(), other.InstallAddress);
        fieldSetFlags()[0] = true;
      }
      this.InstallAddressBuilder = null;
      if (isValidValue(fields()[1], other.InstallPhone)) {
        this.InstallPhone = data().deepCopy(fields()[1].schema(), other.InstallPhone);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.OrderInformation)) {
        this.OrderInformation = data().deepCopy(fields()[2].schema(), other.OrderInformation);
        fieldSetFlags()[2] = true;
      }
      this.OrderInformationBuilder = null;
    }

    /**
      * Gets the value of the 'InstallAddress' field.
      * @return The value.
      */
    public com.hughes.billing.voipworkorder.dto.avro.InstallAddress getInstallAddress() {
      return InstallAddress;
    }


    /**
      * Sets the value of the 'InstallAddress' field.
      * @param value The value of 'InstallAddress'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder setInstallAddress(com.hughes.billing.voipworkorder.dto.avro.InstallAddress value) {
      validate(fields()[0], value);
      this.InstallAddressBuilder = null;
      this.InstallAddress = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'InstallAddress' field has been set.
      * @return True if the 'InstallAddress' field has been set, false otherwise.
      */
    public boolean hasInstallAddress() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'InstallAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hughes.billing.voipworkorder.dto.avro.InstallAddress.Builder getInstallAddressBuilder() {
      if (InstallAddressBuilder == null) {
        if (hasInstallAddress()) {
          setInstallAddressBuilder(com.hughes.billing.voipworkorder.dto.avro.InstallAddress.newBuilder(InstallAddress));
        } else {
          setInstallAddressBuilder(com.hughes.billing.voipworkorder.dto.avro.InstallAddress.newBuilder());
        }
      }
      return InstallAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'InstallAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder setInstallAddressBuilder(com.hughes.billing.voipworkorder.dto.avro.InstallAddress.Builder value) {
      clearInstallAddress();
      InstallAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'InstallAddress' field has an active Builder instance
     * @return True if the 'InstallAddress' field has an active Builder instance
     */
    public boolean hasInstallAddressBuilder() {
      return InstallAddressBuilder != null;
    }

    /**
      * Clears the value of the 'InstallAddress' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder clearInstallAddress() {
      InstallAddress = null;
      InstallAddressBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstallPhone' field.
      * @return The value.
      */
    public java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> getInstallPhone() {
      return InstallPhone;
    }


    /**
      * Sets the value of the 'InstallPhone' field.
      * @param value The value of 'InstallPhone'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder setInstallPhone(java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> value) {
      validate(fields()[1], value);
      this.InstallPhone = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'InstallPhone' field has been set.
      * @return True if the 'InstallPhone' field has been set, false otherwise.
      */
    public boolean hasInstallPhone() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'InstallPhone' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder clearInstallPhone() {
      InstallPhone = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderInformation' field.
      * @return The value.
      */
    public com.hughes.billing.voipworkorder.dto.avro.OrderInformation getOrderInformation() {
      return OrderInformation;
    }


    /**
      * Sets the value of the 'OrderInformation' field.
      * @param value The value of 'OrderInformation'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder setOrderInformation(com.hughes.billing.voipworkorder.dto.avro.OrderInformation value) {
      validate(fields()[2], value);
      this.OrderInformationBuilder = null;
      this.OrderInformation = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderInformation' field has been set.
      * @return True if the 'OrderInformation' field has been set, false otherwise.
      */
    public boolean hasOrderInformation() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'OrderInformation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hughes.billing.voipworkorder.dto.avro.OrderInformation.Builder getOrderInformationBuilder() {
      if (OrderInformationBuilder == null) {
        if (hasOrderInformation()) {
          setOrderInformationBuilder(com.hughes.billing.voipworkorder.dto.avro.OrderInformation.newBuilder(OrderInformation));
        } else {
          setOrderInformationBuilder(com.hughes.billing.voipworkorder.dto.avro.OrderInformation.newBuilder());
        }
      }
      return OrderInformationBuilder;
    }

    /**
     * Sets the Builder instance for the 'OrderInformation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder setOrderInformationBuilder(com.hughes.billing.voipworkorder.dto.avro.OrderInformation.Builder value) {
      clearOrderInformation();
      OrderInformationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'OrderInformation' field has an active Builder instance
     * @return True if the 'OrderInformation' field has an active Builder instance
     */
    public boolean hasOrderInformationBuilder() {
      return OrderInformationBuilder != null;
    }

    /**
      * Clears the value of the 'OrderInformation' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.Order.Builder clearOrderInformation() {
      OrderInformation = null;
      OrderInformationBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Order build() {
      try {
        Order record = new Order();
        if (InstallAddressBuilder != null) {
          try {
            record.InstallAddress = this.InstallAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("InstallAddress"));
            throw e;
          }
        } else {
          record.InstallAddress = fieldSetFlags()[0] ? this.InstallAddress : (com.hughes.billing.voipworkorder.dto.avro.InstallAddress) defaultValue(fields()[0]);
        }
        record.InstallPhone = fieldSetFlags()[1] ? this.InstallPhone : (java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone>) defaultValue(fields()[1]);
        if (OrderInformationBuilder != null) {
          try {
            record.OrderInformation = this.OrderInformationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("OrderInformation"));
            throw e;
          }
        } else {
          record.OrderInformation = fieldSetFlags()[2] ? this.OrderInformation : (com.hughes.billing.voipworkorder.dto.avro.OrderInformation) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Order>
    WRITER$ = (org.apache.avro.io.DatumWriter<Order>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Order>
    READER$ = (org.apache.avro.io.DatumReader<Order>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.InstallAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.InstallAddress.customEncode(out);
    }

    if (this.InstallPhone == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.InstallPhone.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (com.hughes.billing.voipworkorder.dto.avro.InstallPhone e0: this.InstallPhone) {
        actualSize0++;
        out.startItem();
        if (e0 == null) {
          out.writeIndex(0);
          out.writeNull();
        } else {
          out.writeIndex(1);
          e0.customEncode(out);
        }
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.OrderInformation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.OrderInformation.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.InstallAddress = null;
      } else {
        if (this.InstallAddress == null) {
          this.InstallAddress = new com.hughes.billing.voipworkorder.dto.avro.InstallAddress();
        }
        this.InstallAddress.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.InstallPhone = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> a0 = this.InstallPhone;
        if (a0 == null) {
          a0 = new SpecificData.Array<com.hughes.billing.voipworkorder.dto.avro.InstallPhone>((int)size0, SCHEMA$.getField("InstallPhone").schema().getTypes().get(1));
          this.InstallPhone = a0;
        } else a0.clear();
        SpecificData.Array<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.hughes.billing.voipworkorder.dto.avro.InstallPhone>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            com.hughes.billing.voipworkorder.dto.avro.InstallPhone e0 = (ga0 != null ? ga0.peek() : null);
            if (in.readIndex() != 1) {
              in.readNull();
              e0 = null;
            } else {
              if (e0 == null) {
                e0 = new com.hughes.billing.voipworkorder.dto.avro.InstallPhone();
              }
              e0.customDecode(in);
            }
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.OrderInformation = null;
      } else {
        if (this.OrderInformation == null) {
          this.OrderInformation = new com.hughes.billing.voipworkorder.dto.avro.OrderInformation();
        }
        this.OrderInformation.customDecode(in);
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.InstallAddress = null;
          } else {
            if (this.InstallAddress == null) {
              this.InstallAddress = new com.hughes.billing.voipworkorder.dto.avro.InstallAddress();
            }
            this.InstallAddress.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.InstallPhone = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> a0 = this.InstallPhone;
            if (a0 == null) {
              a0 = new SpecificData.Array<com.hughes.billing.voipworkorder.dto.avro.InstallPhone>((int)size0, SCHEMA$.getField("InstallPhone").schema().getTypes().get(1));
              this.InstallPhone = a0;
            } else a0.clear();
            SpecificData.Array<com.hughes.billing.voipworkorder.dto.avro.InstallPhone> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.hughes.billing.voipworkorder.dto.avro.InstallPhone>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                com.hughes.billing.voipworkorder.dto.avro.InstallPhone e0 = (ga0 != null ? ga0.peek() : null);
                if (in.readIndex() != 1) {
                  in.readNull();
                  e0 = null;
                } else {
                  if (e0 == null) {
                    e0 = new com.hughes.billing.voipworkorder.dto.avro.InstallPhone();
                  }
                  e0.customDecode(in);
                }
                a0.add(e0);
              }
            }
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.OrderInformation = null;
          } else {
            if (this.OrderInformation == null) {
              this.OrderInformation = new com.hughes.billing.voipworkorder.dto.avro.OrderInformation();
            }
            this.OrderInformation.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }

}











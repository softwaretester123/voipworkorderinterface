/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hughes.billing.voipworkorder.dto.avro.req;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class InstallAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8075332782678147760L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InstallAddress\",\"namespace\":\"com.hughes.billing.voipworkorder.dto.avro.req\",\"fields\":[{\"name\":\"Address1\",\"type\":\"string\"},{\"name\":\"Address2\",\"type\":[\"string\",\"null\"]},{\"name\":\"City\",\"type\":\"string\"},{\"name\":\"State\",\"type\":\"string\"},{\"name\":\"Zip\",\"type\":\"string\"},{\"name\":\"Country\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<InstallAddress> ENCODER =
      new BinaryMessageEncoder<InstallAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<InstallAddress> DECODER =
      new BinaryMessageDecoder<InstallAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<InstallAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<InstallAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<InstallAddress>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this InstallAddress to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a InstallAddress from a ByteBuffer. */
  public static InstallAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence Address1;
  @Deprecated public java.lang.CharSequence Address2;
  @Deprecated public java.lang.CharSequence City;
  @Deprecated public java.lang.CharSequence State;
  @Deprecated public java.lang.CharSequence Zip;
  @Deprecated public java.lang.CharSequence Country;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public InstallAddress() {}

  /**
   * All-args constructor.
   * @param Address1 The new value for Address1
   * @param Address2 The new value for Address2
   * @param City The new value for City
   * @param State The new value for State
   * @param Zip The new value for Zip
   * @param Country The new value for Country
   */
  public InstallAddress(java.lang.CharSequence Address1, java.lang.CharSequence Address2, java.lang.CharSequence City, java.lang.CharSequence State, java.lang.CharSequence Zip, java.lang.CharSequence Country) {
    this.Address1 = Address1;
    this.Address2 = Address2;
    this.City = City;
    this.State = State;
    this.Zip = Zip;
    this.Country = Country;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Address1;
    case 1: return Address2;
    case 2: return City;
    case 3: return State;
    case 4: return Zip;
    case 5: return Country;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Address1 = (java.lang.CharSequence)value$; break;
    case 1: Address2 = (java.lang.CharSequence)value$; break;
    case 2: City = (java.lang.CharSequence)value$; break;
    case 3: State = (java.lang.CharSequence)value$; break;
    case 4: Zip = (java.lang.CharSequence)value$; break;
    case 5: Country = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Address1' field.
   * @return The value of the 'Address1' field.
   */
  public java.lang.CharSequence getAddress1() {
    return Address1;
  }

  /**
   * Sets the value of the 'Address1' field.
   * @param value the value to set.
   */
  public void setAddress1(java.lang.CharSequence value) {
    this.Address1 = value;
  }

  /**
   * Gets the value of the 'Address2' field.
   * @return The value of the 'Address2' field.
   */
  public java.lang.CharSequence getAddress2() {
    return Address2;
  }

  /**
   * Sets the value of the 'Address2' field.
   * @param value the value to set.
   */
  public void setAddress2(java.lang.CharSequence value) {
    this.Address2 = value;
  }

  /**
   * Gets the value of the 'City' field.
   * @return The value of the 'City' field.
   */
  public java.lang.CharSequence getCity() {
    return City;
  }

  /**
   * Sets the value of the 'City' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.City = value;
  }

  /**
   * Gets the value of the 'State' field.
   * @return The value of the 'State' field.
   */
  public java.lang.CharSequence getState() {
    return State;
  }

  /**
   * Sets the value of the 'State' field.
   * @param value the value to set.
   */
  public void setState(java.lang.CharSequence value) {
    this.State = value;
  }

  /**
   * Gets the value of the 'Zip' field.
   * @return The value of the 'Zip' field.
   */
  public java.lang.CharSequence getZip() {
    return Zip;
  }

  /**
   * Sets the value of the 'Zip' field.
   * @param value the value to set.
   */
  public void setZip(java.lang.CharSequence value) {
    this.Zip = value;
  }

  /**
   * Gets the value of the 'Country' field.
   * @return The value of the 'Country' field.
   */
  public java.lang.CharSequence getCountry() {
    return Country;
  }

  /**
   * Sets the value of the 'Country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.Country = value;
  }

  /**
   * Creates a new InstallAddress RecordBuilder.
   * @return A new InstallAddress RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder newBuilder() {
    return new com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder();
  }

  /**
   * Creates a new InstallAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new InstallAddress RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder other) {
    return new com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder(other);
  }

  /**
   * Creates a new InstallAddress RecordBuilder by copying an existing InstallAddress instance.
   * @param other The existing instance to copy.
   * @return A new InstallAddress RecordBuilder
   */
  public static com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder newBuilder(com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress other) {
    return new com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder(other);
  }

  /**
   * RecordBuilder for InstallAddress instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InstallAddress>
    implements org.apache.avro.data.RecordBuilder<InstallAddress> {

    private java.lang.CharSequence Address1;
    private java.lang.CharSequence Address2;
    private java.lang.CharSequence City;
    private java.lang.CharSequence State;
    private java.lang.CharSequence Zip;
    private java.lang.CharSequence Country;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Address1)) {
        this.Address1 = data().deepCopy(fields()[0].schema(), other.Address1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Address2)) {
        this.Address2 = data().deepCopy(fields()[1].schema(), other.Address2);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.City)) {
        this.City = data().deepCopy(fields()[2].schema(), other.City);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.State)) {
        this.State = data().deepCopy(fields()[3].schema(), other.State);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Zip)) {
        this.Zip = data().deepCopy(fields()[4].schema(), other.Zip);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Country)) {
        this.Country = data().deepCopy(fields()[5].schema(), other.Country);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing InstallAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.Address1)) {
        this.Address1 = data().deepCopy(fields()[0].schema(), other.Address1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Address2)) {
        this.Address2 = data().deepCopy(fields()[1].schema(), other.Address2);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.City)) {
        this.City = data().deepCopy(fields()[2].schema(), other.City);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.State)) {
        this.State = data().deepCopy(fields()[3].schema(), other.State);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Zip)) {
        this.Zip = data().deepCopy(fields()[4].schema(), other.Zip);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Country)) {
        this.Country = data().deepCopy(fields()[5].schema(), other.Country);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'Address1' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddress1() {
      return Address1;
    }

    /**
      * Sets the value of the 'Address1' field.
      * @param value The value of 'Address1'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder setAddress1(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.Address1 = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Address1' field has been set.
      * @return True if the 'Address1' field has been set, false otherwise.
      */
    public boolean hasAddress1() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Address1' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder clearAddress1() {
      Address1 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Address2' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddress2() {
      return Address2;
    }

    /**
      * Sets the value of the 'Address2' field.
      * @param value The value of 'Address2'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder setAddress2(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Address2 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Address2' field has been set.
      * @return True if the 'Address2' field has been set, false otherwise.
      */
    public boolean hasAddress2() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Address2' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder clearAddress2() {
      Address2 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'City' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return City;
    }

    /**
      * Sets the value of the 'City' field.
      * @param value The value of 'City'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.City = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'City' field has been set.
      * @return True if the 'City' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'City' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder clearCity() {
      City = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'State' field.
      * @return The value.
      */
    public java.lang.CharSequence getState() {
      return State;
    }

    /**
      * Sets the value of the 'State' field.
      * @param value The value of 'State'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder setState(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.State = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'State' field has been set.
      * @return True if the 'State' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'State' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder clearState() {
      State = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Zip' field.
      * @return The value.
      */
    public java.lang.CharSequence getZip() {
      return Zip;
    }

    /**
      * Sets the value of the 'Zip' field.
      * @param value The value of 'Zip'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder setZip(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.Zip = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Zip' field has been set.
      * @return True if the 'Zip' field has been set, false otherwise.
      */
    public boolean hasZip() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Zip' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder clearZip() {
      Zip = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'Country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return Country;
    }

    /**
      * Sets the value of the 'Country' field.
      * @param value The value of 'Country'.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.Country = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'Country' field has been set.
      * @return True if the 'Country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'Country' field.
      * @return This builder.
      */
    public com.hughes.billing.voipworkorder.dto.avro.req.InstallAddress.Builder clearCountry() {
      Country = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public InstallAddress build() {
      try {
        InstallAddress record = new InstallAddress();
        record.Address1 = fieldSetFlags()[0] ? this.Address1 : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Address2 = fieldSetFlags()[1] ? this.Address2 : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.City = fieldSetFlags()[2] ? this.City : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.State = fieldSetFlags()[3] ? this.State : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.Zip = fieldSetFlags()[4] ? this.Zip : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.Country = fieldSetFlags()[5] ? this.Country : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<InstallAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<InstallAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<InstallAddress>
    READER$ = (org.apache.avro.io.DatumReader<InstallAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
